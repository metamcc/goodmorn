=== make docker network ===

docker network create --attachable --driver overlay mynet

=== start zookeepers ===

docker run -d --network=mynet --restart=always --name zookeeper0.mycreditchain.io -p 2181:2181 -p 2888:2888 -p 3888:3888 -e ZOO_MY_ID=1 -e ZOO_SERVERS="server.1=zookeeper0.mycreditchain.io:2888:3888 server.2=zookeeper1.mycreditchain.io:2888:3888 server.3=zookeeper2.mycreditchain.io:2888:3888" hyperledger/fabric-zookeeper

docker run -d --network=mynet --restart=always --name zookeeper1.mycreditchain.io -p 2181:2181 -p 2888:2888 -p 3888:3888 -e ZOO_MY_ID=2 -e ZOO_SERVERS="server.1=zookeeper0.mycreditchain.io:2888:3888 server.2=zookeeper1.mycreditchain.io:2888:3888 server.3=zookeeper2.mycreditchain.io:2888:3888" hyperledger/fabric-zookeeper

docker run -d --network=mynet --restart=always --name zookeeper2.mycreditchain.io -p 2181:2181 -p 2888:2888 -p 3888:3888 -e ZOO_MY_ID=3 -e ZOO_SERVERS="server.1=zookeeper0.mycreditchain.io:2888:3888 server.2=zookeeper1.mycreditchain.io:2888:3888 server.3=zookeeper2.mycreditchain.io:2888:3888" hyperledger/fabric-zookeeper

=== start kafkas ===

docker run -d --network=mynet --name kafka1.mycreditchain.io -p 9092:9092 -p 9093:9093 -e KAFKA_MESSAGE_MAX_BYTES=103809024 -e KAFKA_REPLICA_FETCH_MAX_BYTES=103809024 -e KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false -e KAFKA_DEFAULT_REPLICATION_FACTOR=3 -e KAFKA_MIN_INSYNC_REPLICAS=2 -e KAFKA_ZOOKEEPER_CONNECT="zookeeper0.mycreditchain.io:2181,zookeeper1.mycreditchain.io:2181,zookeeper2.mycreditchain.io:2181" -e KAFKA_BROKER_ID=1 hyperledger/fabric-kafka

docker run -d --network=mynet --name kafka2.mycreditchain.io -p 9092:9092 -p 9093:9093 -e KAFKA_MESSAGE_MAX_BYTES=103809024 -e KAFKA_REPLICA_FETCH_MAX_BYTES=103809024 -e KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false -e KAFKA_DEFAULT_REPLICATION_FACTOR=3 -e KAFKA_MIN_INSYNC_REPLICAS=2 -e KAFKA_ZOOKEEPER_CONNECT="zookeeper0.mycreditchain.io:2181,zookeeper1.mycreditchain.io:2181,zookeeper2.mycreditchain.io:2181" -e KAFKA_BROKER_ID=2 hyperledger/fabric-kafka

=== start oderers ===

docker run -d --network=mynet --name orderer1.mycreditchain.io -p 7050:7050 -e ORDERER_GENERAL_LOGLEVEL=debug -e ORDERER_GENERAL_LISTENPORT=7050 -e ORDERER_GENERAL_GENESISPROFILE=MyCreditChain -e ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 -e ORDERER_GENERAL_GENESISMETHOD=file -e ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block -e ORDERER_GENERAL_LOCALMSPID=mycreditchain.io -e ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp -e ORDERER_GENERAL_TLS_ENABLED=true -e ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key -e ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt -e ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt] -e ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s -e ORDERER_KAFAK_RETRY_SHORTTOTAL=30s -e ORDERER_KAFKA_VERBOSE=true -e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=mynet -w /opt/gopath/src/github.com/hyperledger/fabric -v ${PWD}/channel-artifacts/orderer.genesis.block:/var/hyperledger/orderer/orderer.genesis.block -v ${PWD}/crypto-config/ordererOrganizations/mycreditchain.io/orderers/orderer1.mycreditchain.io/msp:/var/hyperledger/orderer/msp -v ${PWD}/crypto-config/ordererOrganizations/mycreditchain.io/orderers/orderer1.mycreditchain.io/tls/:/var/hyperledger/orderer/tls hyperledger/fabric-orderer:x86_64-1.1.0 orderer

docker run -d --network=mynet --name orderer2.mycreditchain.io -p 7050:7050 -e ORDERER_GENERAL_LOGLEVEL=debug -e ORDERER_GENERAL_LISTENPORT=7050 -e ORDERER_GENERAL_GENESISPROFILE=MyCreditChain -e ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 -e ORDERER_GENERAL_GENESISMETHOD=file -e ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block -e ORDERER_GENERAL_LOCALMSPID=mycreditchain.io -e ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp -e ORDERER_GENERAL_TLS_ENABLED=true -e ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key -e ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt -e ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt] -e ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s -e ORDERER_KAFAK_RETRY_SHORTTOTAL=30s -e ORDERER_KAFKA_VERBOSE=true -e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=mynet -w /opt/gopath/src/github.com/hyperledger/fabric -v ${PWD}/channel-artifacts/orderer.genesis.block:/var/hyperledger/orderer/orderer.genesis.block -v ${PWD}/crypto-config/ordererOrganizations/mycreditchain.io/orderers/orderer2.mycreditchain.io/msp:/var/hyperledger/orderer/msp -v ${PWD}/crypto-config/ordererOrganizations/mycreditchain.io/orderers/orderer2.mycreditchain.io/tls/:/var/hyperledger/orderer/tls hyperledger/fabric-orderer:x86_64-1.1.0 orderer

=== with docker compose and couchdb ===

docker run -d --network=mynet --name couchdb1.mycreditchain.io hyperledger/fabric-couchdb

docker run -d --network=mynet --name peer1.org1.mycreditchain.io -p 7051:7051 -p 7053:7053 -e CORE_PEER_TLS_ENABLED=true -e CORE_PEER_GOSSIP_USELEADERELECTION=true -e CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock -e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=mynet -e CORE_PEER_GOSSIP_ORGLEADER=false -e CORE_PEER_PROFILE_ENABLED=true -e CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt -e CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key -e CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt -e CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.mycreditchain.io/peers/peer1.org1.mycreditchain.io/tls/server.crt -e CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.mycreditchain.io/peers/peer1.org1.mycreditchain.io/tls/server.key -e CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.mycreditchain.io/peers/peer1.org1.mycreditchain.io/tls/ca.crt -e CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.mycreditchain.io/users/Admin@org1.mycreditchain.io/msp -e CORE_PEER_ID=peer1.org1.mycreditchain.io -e CORE_PEER_LOCALMSPID=org1.mycreditchain.io -e CORE_PEER_ADDRESS=peer1.org1.mycreditchain.io:7051 -e CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.mycreditchain.io:7051 -e CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.mycreditchain.io:7051 -e CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1.mycreditchain.io:5984 -v /var/run/:/host/var/run/ -v ${PWD}/crypto-config/peerOrganizations/org1.mycreditchain.io/peers/peer1.org1.mycreditchain.io/msp:/etc/hyperledger/fabric/msp -v ${PWD}/crypto-config/peerOrganizations/org1.mycreditchain.io/peers/peer1.org1.mycreditchain.io/tls:/etc/hyperledger/fabric/tls -v ${PWD}/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ -v ${PWD}/channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts hyperledger/fabric-peer:x86_64-1.1.0 peer node start

docker run -d --network=mynet --name couchdb2.mycreditchain.io hyperledger/fabric-couchdb

docker run -d --network=mynet --name peer2.org1.mycreditchain.io -p 7051:7051 -p 7053:7053 -e CORE_PEER_TLS_ENABLED=true -e CORE_PEER_GOSSIP_USELEADERELECTION=true -e CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock -e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=mynet -e CORE_PEER_GOSSIP_ORGLEADER=false -e CORE_PEER_PROFILE_ENABLED=true -e CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt -e CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key -e CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt -e CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.mycreditchain.io/peers/peer2.org1.mycreditchain.io/tls/server.crt -e CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.mycreditchain.io/peers/peer2.org1.mycreditchain.io/tls/server.key -e CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.mycreditchain.io/peers/peer2.org1.mycreditchain.io/tls/ca.crt -e CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.mycreditchain.io/users/Admin@org1.mycreditchain.io/msp -e CORE_PEER_ID=peer2.org1.mycreditchain.io -e CORE_PEER_LOCALMSPID=org1.mycreditchain.io -e CORE_PEER_ADDRESS=peer2.org1.mycreditchain.io:7051 -e CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2.org1.mycreditchain.io:7051 -e CORE_PEER_GOSSIP_BOOTSTRAP=peer2.org1.mycreditchain.io:7051 -e CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2.mycreditchain.io:5984 -v /var/run/:/host/var/run/ -v ${PWD}/crypto-config/peerOrganizations/org1.mycreditchain.io/peers/peer2.org1.mycreditchain.io/msp:/etc/hyperledger/fabric/msp -v ${PWD}/crypto-config/peerOrganizations/org1.mycreditchain.io/peers/peer2.org1.mycreditchain.io/tls:/etc/hyperledger/fabric/tls -v ${PWD}/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ -v ${PWD}/channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts hyperledger/fabric-peer:x86_64-1.1.0 peer node start


